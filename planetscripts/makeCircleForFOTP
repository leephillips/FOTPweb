#! /bin/bash
# ImageMagick must be installed.
# Makes a picture (in png format) into a circularly masked png, with transparent
# edges, for use on the FOTP website article pages. Start with an image that is at
# least 150 px square, and close to those dimensions, with the element of interest centered. The mask image 
# maske.png (stored in /static) must be available. But it can be reconstructed
# with: 

#     convert -size 150x150 xc:none -fill black -draw "circle 75,75 22.5,22.5" mask1.png
#     convert mask1.png -alpha extract maske.png

# (The values 22.5 above should be (1 - 1/sqrt(2))*150, but that was too big (roundoff?).

# The output file in argument 2 must support transparancy (png is good).
# Input file (argument 1) should be resized to 150x150 (can use “convert in.png -resize 150x150\! out.png”).

convert $1 maske.png -alpha Off -compose CopyOpacity -composite $2

# To make a gif movie out of a set of frames, do 
# convert -delay 90 *pngout.png +repage sfSlides2.gif

# And here is the Python used to make the plane towing a banner:
# for i in range(75):
# ...   c.getoutput('convert towshipWithBanner.png -crop 150x150+%i+0 -background white -extent 150x150 tt%05i.png' % (i*(900./75), i))
